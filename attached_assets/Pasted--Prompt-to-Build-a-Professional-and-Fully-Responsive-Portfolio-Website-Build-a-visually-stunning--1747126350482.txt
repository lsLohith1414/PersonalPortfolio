âœ… Prompt to Build a Professional and Fully Responsive Portfolio Website:
Build a visually stunning, fully responsive, and highly professional portfolio website using only HTML, CSS, and JavaScript. The website must be designed to provide an optimal user experience on all devices (desktops, tablets, and mobile phones). The website structure should include:

1. Home/Landing Page:
A full-screen hero section with a professional background image or gradient overlay.

A bold introduction with name (e.g., "I am [Your Name]"), title (AI/ML Engineer | Data Scientist | MERN Stack Developer), and a compelling tagline (e.g., "Transforming Data into Actionable Insights").

Prominent call-to-action button (e.g., "View My Work" or "Contact Me").

Responsive navigation bar that transitions to a hamburger menu on smaller screens.

Smooth scroll effect for navigation links.

2. About Me Section:
Display a well-structured, two-column layout that adjusts to a single-column layout on smaller screens.

Left Side: Professional photo with a hover effect.

Right Side: Concise bio that highlights experience, skills, and career goals.

Include a well-styled "Download Resume" button.

3. Skills & Technologies Section:
Use a flexbox or grid layout to ensure responsive alignment of skill cards.

Display skills using progress bars or circular indicators with percentages.

Include icons for key technologies (e.g., Python, React, TensorFlow, Node.js).

Adjust font sizes and padding for readability on smaller screens.

4. Projects & Case Studies Section:
Showcase at least 4 projects in a visually appealing card layout.

Each project card should include:

Project title, brief description, and technologies used.

High-quality images with hover zoom effects.

Buttons for "Live Demo" and "GitHub Repo" with hover animations.

Implement a responsive grid layout that adapts from 2-3 columns on desktops to a single-column layout on mobile.

5. Blog Section (Optional but Recommended):
Display 3-4 blog posts as clickable cards with a brief summary.

Implement a responsive layout with smooth hover transitions.

Include a "View All Posts" button that redirects to a dedicated blog page.

6. Contact Section:
Create a visually appealing contact form with fields for name, email, subject, and message.

Implement form validation using JavaScript, including checks for required fields and valid email format.

Include social media icons (LinkedIn, GitHub, Email) with hover effects.

Ensure the contact form and social links are easy to access and interact with on both mobile and desktop screens.

7. Footer Section:
Sticky footer with a responsive layout and navigation links.

Include social media icons with hover effects.

"Back to Top" button with smooth scroll functionality.

Design & Responsiveness Requirements:
Apply a consistent, modern color scheme (e.g., dark blue, grey, and white) for a professional look.

Use CSS Flexbox and Grid for responsive layout design.

Implement media queries for optimal display on various screen sizes (e.g., 320px to 1440px).

Use rem/em units for font sizes to maintain consistency across devices.

Apply smooth scrolling and transition effects for enhanced interactivity.

Ensure buttons, links, and interactive elements are easily clickable and accessible on all devices.